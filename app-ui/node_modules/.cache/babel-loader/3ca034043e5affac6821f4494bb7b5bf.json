{"ast":null,"code":"const HOST = \"http://localhost:9000\";\nexport const insertClient = client => (setClientInsertionResult, resetForm) => {\n  const PATH = \"/insert/client\";\n  fetch(HOST + PATH, {\n    method: 'POST',\n    body: JSON.stringify(client),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.text();\n    } else {\n      throw new Error(\"Client can't be added.\");\n    }\n  }).then(res => {\n    setClientInsertionResult(res);\n    resetForm();\n  }).catch(err => setClientInsertionResult(err.message));\n};\nexport const getClientIds = () => setClientIdsResult => {\n  const PATH = \"/client/ids\";\n  fetch(HOST + PATH, {\n    method: 'GET'\n  }).then(res => {\n    if (res.ok) {\n      return res.arrayBuffer();\n    } else {\n      throw new Error(\"Client Ids can't be retrieved.\");\n    }\n  }).then(res => {\n    setClientIdsResult(res, 'Client Ids retrieved.');\n  }).catch(err => setClientIdsResult([], err.message));\n};","map":{"version":3,"sources":["/Users/tomaszzablocki/Documents/projects/UserTransactionView/app-ui/src/component/editdata/rest.js"],"names":["HOST","insertClient","client","setClientInsertionResult","resetForm","PATH","fetch","method","body","JSON","stringify","headers","then","res","ok","text","Error","catch","err","message","getClientIds","setClientIdsResult","arrayBuffer"],"mappings":"AAAA,MAAMA,IAAI,GAAG,uBAAb;AACA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY,CAACC,wBAAD,EAA2BC,SAA3B,KAAyC;AAC7E,QAAMC,IAAI,GAAG,gBAAb;AACAC,EAAAA,KAAK,CAACN,IAAI,GAAGK,IAAR,EACD;AACIE,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAFV;AAGIS,IAAAA,OAAO,EAAE;AAAC,sBAAe;AAAhB;AAHb,GADC,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAG;AACC,QAAIA,GAAG,CAACC,EAAR,EAAW;AACP,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,KAFD,MAEO;AACH,YAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACH;AAAC,GAXnB,EAYKJ,IAZL,CAYUC,GAAG,IAAI;AACTV,IAAAA,wBAAwB,CAACU,GAAD,CAAxB;AACAT,IAAAA,SAAS;AACZ,GAfL,EAgBKa,KAhBL,CAgBWC,GAAG,IAAIf,wBAAwB,CAACe,GAAG,CAACC,OAAL,CAhB1C;AAiBH,CAnBM;AAoBP,OAAO,MAAMC,YAAY,GAAG,MAAOC,kBAAD,IAAwB;AACtD,QAAMhB,IAAI,GAAG,aAAb;AACAC,EAAAA,KAAK,CAACN,IAAI,GAAGK,IAAR,EACD;AACIE,IAAAA,MAAM,EAAE;AADZ,GADC,CAAL,CAIKK,IAJL,CAIUC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACC,EAAP,EAAU;AACN,aAAOD,GAAG,CAACS,WAAJ,EAAP;AACH,KAFD,MAEO;AACH,YAAM,IAAIN,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ,GAVL,EAWKJ,IAXL,CAWUC,GAAG,IAAI;AACTQ,IAAAA,kBAAkB,CAACR,GAAD,EAAM,uBAAN,CAAlB;AACH,GAbL,EAcKI,KAdL,CAcWC,GAAG,IAAIG,kBAAkB,CAAC,EAAD,EAAKH,GAAG,CAACC,OAAT,CAdpC;AAeH,CAjBM","sourcesContent":["const HOST = \"http://localhost:9000\";\nexport const insertClient = (client) => (setClientInsertionResult, resetForm) => {\n    const PATH = \"/insert/client\";\n    fetch(HOST + PATH,\n        {\n            method: 'POST',\n            body: JSON.stringify(client),\n            headers: {\"Content-Type\":\"application/json\"}\n        })\n        .then(res =>{\n                     if (res.ok){\n                         return res.text()\n                     } else {\n                         throw new Error(\"Client can't be added.\")\n                     }})\n        .then(res => {\n            setClientInsertionResult(res);\n            resetForm();\n        })\n        .catch(err => setClientInsertionResult(err.message))\n}\nexport const getClientIds = () => (setClientIdsResult) => {\n    const PATH = \"/client/ids\";\n    fetch(HOST + PATH,\n        {\n            method: 'GET'\n        })\n        .then(res => {\n            if(res.ok){\n                return res.arrayBuffer()\n            } else {\n                throw new Error(\"Client Ids can't be retrieved.\")\n            }\n        })\n        .then(res => {\n            setClientIdsResult(res, 'Client Ids retrieved.')\n        })\n        .catch(err => setClientIdsResult([], err.message))\n}"]},"metadata":{},"sourceType":"module"}